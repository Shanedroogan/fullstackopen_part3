{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","props","value","filter","onChange","PersonForm","onSubmit","newName","handleNameChange","newPhone","handlePhoneChange","type","Person","name","num","deletePerson","onClick","Persons","personsToShow","map","person","key","id","number","Notification","message","className","messageClass","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","persons","setPersons","setNewName","setNewPhone","setFilter","setMessage","setMessageClass","useEffect","personService","initialPersons","showNotification","messageContent","classSetting","setTimeout","toLowerCase","includes","event","target","preventDefault","personObject","every","returnedPerson","concat","catch","error","window","confirm","find","p","changedPerson","console","log","result","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7ca6f366.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Filter = (props) => (\r\n    <div>\r\n      <p>filter: <input value={props.filter} onChange={props.onChange} /></p>\r\n    </div>\r\n  )\r\n\r\n\r\nexport default Filter;","import React from 'react'\r\n\r\nconst PersonForm = (props) => (\r\n  <div>\r\n    <form onSubmit={props.onSubmit}>\r\n    <div>\r\n          name: <input \r\n                  value={props.newName}\r\n                  onChange={props.handleNameChange}\r\n                />\r\n        </div>\r\n        <div>\r\n        phone number: <input \r\n                  value={props.newPhone}\r\n                  onChange={props.handlePhoneChange}\r\n                />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n    </form>\r\n  </div>\r\n)\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Person = ({ name, num, deletePerson }) => (\r\n    <div>\r\n        <p>{name} {num}</p>\r\n        <button onClick={deletePerson}>delete</button>\r\n    </div>\r\n)\r\n\r\nconst Persons = ({ personsToShow, deletePerson }) => (\r\n    <div>\r\n        {personsToShow.map(person =>\r\n            <Person \r\n              key={person.id} \r\n              name={person.name} \r\n              num={person.number}\r\n              deletePerson={() => deletePerson(person)} />)}\r\n    </div>\r\n)\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Notification = (props) => {\r\n    if (props.message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={props.messageClass}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response=>response.data)\r\n}\r\n\r\nconst deletePerson = id => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n    // return request.then(response => response.data)\r\n}\r\n\r\n\r\nexport default {getAll, create, update, deletePerson}","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newPhone, setNewPhone ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ message, setMessage ] = useState(null)\n  const [ messageClass, setMessageClass ] = useState('')\n  \n  useEffect(() =>{\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  },[])\n  \n\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handlePhoneChange = (event) => setNewPhone(event.target.value)\n  const handleFilterChange = (event) => setFilter(event.target.value)\n  \n  const showNotification = (messageContent, classSetting) => {\n    setMessageClass(classSetting)\n    setMessage(\n      messageContent\n    )\n    setTimeout(() => {\n      setMessage(null)\n    }, 5000)\n  }\n  \n  const deletePerson = (person) => {\n    const result = window.confirm(`Delete ${person.name}?`)\n    const id = person.id\n    if (result) {\n    personService\n    .deletePerson(id)\n    .then(response => {\n      setPersons(persons.filter(person => person.id !== id))\n\n      showNotification(`Successfully deleted ${person.name} from the server.`, 'success')\n    })\n    } else {\n      showNotification('Deletion aborted.', 'failure')\n    }\n  }\n\n  const addName = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newPhone\n    }\n    if (persons.every((person) => person.name !== newName)) {\n\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n\n          showNotification(`Successfully added ${personObject.name}.`, 'success')\n\n          setNewName('')\n          setNewPhone('')\n        })\n        .catch(error => {\n          showNotification(error.response.data.error, 'error')\n        })\n    } else {\n      const result = window.confirm(`${personObject.name} is already added to phonebook, replace the old number with a new one?`)\n\n      if (result) {\n        const person = persons.find(p => p.name === personObject.name)\n        const changedPerson = {...person, number: personObject.number}\n\n        personService\n          .update(person.id, changedPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.name !== personObject.name ? person : returnedPerson))\n            showNotification(`Successfully changed ${personObject.name}'s phone number.`, 'success')\n          })\n          .catch(error => {\n            showNotification(`Information of ${personObject.name} was already removed from the server`, 'error')\n            setPersons(persons.filter(person => person.name !== personObject.name))\n          })\n\n      } else {\n        console.log('update phone number cancelled')\n      }\n    }\n    \n  }\n\n\n  const personsToShow = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n  //console.log('personsToShow:', personsToShow)\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} messageClass={messageClass} />\n      <Filter value={filter} onChange={handleFilterChange} />\n      <PersonForm \n          onSubmit={addName} \n          newName={newName} \n          newPhone={newPhone} \n          handleNameChange={handleNameChange} \n          handlePhoneChange={handlePhoneChange} \n      />\n      <h3>Numbers</h3>\n\n      <Persons personsToShow={personsToShow} deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}